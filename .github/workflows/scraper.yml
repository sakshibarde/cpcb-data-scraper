name: Scrape and Upload to Drive
on:
  workflow_dispatch: # Allows manual runs
  schedule:
    # Runs at the beginning of every hour
    - cron: '0 * * * *'

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install Python dependencies
        run: pip install pandas requests
        
      - name: Run Python scraper
        run: python cpcb_scraper.py
        
      - name: Setup Node.js for Drive upload
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install Google APIs
        run: npm install googleapis
        
      - name: Upload newly generated CSV files to Google Drive
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GDRIVE_CREDENTIALS }}
          FOLDER_ID: 1qSb7_elWCqp8dPfO5rj3NJk5HVYxTXBY
        run: |
          node << 'EOF'
          const { google } = require('googleapis');
          const fs = require('fs');
          const path = require('path');

          async function uploadFiles() {
            try {
              // Parse credentials
              const credentials = JSON.parse(process.env.GOOGLE_CREDENTIALS);
              
              // Setup authentication
              const auth = new google.auth.GoogleAuth({
                credentials,
                scopes: ['https://www.googleapis.com/auth/drive.file']
              });

              const drive = google.drive({ version: 'v3', auth });
              
              // Find all CSV files in current directory
              const files = fs.readdirSync('.').filter(f => f.endsWith('.csv'));
              
              if (files.length === 0) {
                console.log('No CSV files found to upload');
                return;
              }
              
              console.log(`Found ${files.length} CSV file(s):`, files);

              // Upload each CSV file
              for (const file of files) {
                console.log(`Uploading ${file}...`);
                
                const fileMetadata = {
                  name: file,
                  parents: [process.env.FOLDER_ID]
                };

                const media = {
                  mimeType: 'text/csv',
                  body: fs.createReadStream(file)
                };

                const response = await drive.files.create({
                  resource: fileMetadata,
                  media: media,
                  fields: 'id,name'
                });

                console.log(`‚úÖ Successfully uploaded ${file}`);
                console.log(`   File ID: ${response.data.id}`);
              }
              
              console.log(`\nüéâ All ${files.length} CSV files uploaded successfully!`);
              
            } catch (error) {
              console.error('‚ùå Error uploading files:', error.message);
              
              // More detailed error logging
              if (error.code) {
                console.error('Error code:', error.code);
              }
              if (error.errors) {
                console.error('Detailed errors:', error.errors);
              }
              
              process.exit(1);
            }
          }

          uploadFiles();
          EOF
